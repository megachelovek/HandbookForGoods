namespace GoodsHandbookMalchikovPavlov
{
    /// <remarks>
    /// 1. Выбрана state-oriented реализация, которая сама по себе сложна, а в отсутствии комментариев её проще
    /// переписать, чем понять
    /// 2. Обилие непонятных флагов, условий и прочего - очень сложно понять, что происходит и за что отвечает
    /// анализируемый блок кода
    /// 3. Замещение стандартных механизмов фреймворка своими велосипедами (пример - парсинг ввода)
    /// 4. Отстутствие сценарных тестов на создание элементов в справочнике. Мало тестить валидатор. Нужно ещё доказать,
    /// что исполняемый код до него добирается.
    /// 5. Как следствие - проблемы с работой программы в целом. По описанию команды create в хелпе не удалось создать
    /// элемент справочника. Следуя инструкции, была введена команда create toy bear - программа молча "проглотила" ввод,
    /// не выдав ни подтверждения, ни сообщения. Последующая команда list toy не выдала ничего. Что всё это означает -
    /// мне как пользователю остаётся лишь догадываться. Ни в комментариях к коду, ни в инструкции такой информации нет.
    ///
    /// По итогу - видно, что вы старались сделать более-менее универсальное решение, но ушли далеко в стейт-реализацию
    /// и сами же там потерялись. Совет - команды, вводимые пользователем, живут сами по себе. Им не нужны никакие
    /// activeCommand и lastResponse. Ввели-распарсили-выполнили действие/сообщили об ошибке.
    /// P.S. Пожалуйста, пишите комментарии. Если бы вы это делали, то велик шанс, что не ушли бы в такие дебри.
    /// </remarks>
    class Program
    {
        static void Main(string[] args)
        {
            Dispatcher dispatcher = new Dispatcher();
            dispatcher.Start();
        }
    }
}
